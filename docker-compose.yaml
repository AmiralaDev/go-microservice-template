version: '3.6'

volumes:
  pg_data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

services:
  postgres:
    container_name: pg_container
    image: postgres:11.16-alpine
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: grpc_template

  zookeeper:
    image: bitnami/zookeeper
    ports:
      - 2181:2181
    hostname: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'true'

  kafka:
    image: bitnami/kafka
    ports:
      - 9092:9092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://127.0.0.1:9092'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

#  kafdrop:
#    container_name: kafdrop
#    restart: always
#    image: obsidiandynamics/kafdrop
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka1:19091"
#    depends_on:
#      - kafka
#    networks:
#      - products_network